<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Movies - Watch & Learn</title>

    <script>
        tailwind.config = {
            darkMode: 'class', // Enable class-based dark mode
            theme: {
                extend: {
                    // You can add custom theme extensions here if needed
                }
            }
        }
    </script>
    <script src="https://cdn.tailwindcss.com"></script>

    <script>
        // Set dark mode based on local storage or system preference
        if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
            document.documentElement.classList.add('dark')
        } else {
            document.documentElement.classList.remove('dark')
        }
    </script>

    <style>
        /* Standard CSS for line-clamp for better compatibility */
        .line-clamp-1 {
            overflow: hidden;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 1;
        }
        .line-clamp-2 {
            overflow: hidden;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 2;
        }

        /* Ensure sticky header works well */
        body {
            padding-top: 0;
        }
    </style>

    <script>
        // Movie Data (updated for "Movies" page)
        const videoData = [
            {
                id: '1',
                title: 'The Rope (1948)',
                description: 'Two men try to convince themselves they have committed the perfect murder by hosting a dinner party after strangling a former classmate to death.',
                url: 'https://drive.google.com/file/d/1S1HJZKYLQ8pvMoHzl3UrhYzT5SFjS-hv/view',
                thumbnail: '/site_files/Rope_Poster.jpg',
                category: 'Advanced',
                Level: 'Advanced',
                duration: '1:20:00',
                featured: true
            } ,
            {
                id: '2',
                title: 'The King&#39;s Speech (2010)',
                description: 'The story of King George VI, his unexpected ascension to the throne of the British Empire in 1936, and the speech therapist who helped the unsure monarch overcome his stammer.',
                url: 'https://drive.google.com/file/d/1S1HJZKYLQ8pvMoHzl3UrhYzT5SFjS-hv/view',
                thumbnail: '/site_files/King_Poster1.jpg',
                category: 'Advanced',
                Level: 'Advanced',
                duration: '2:10:00'
                
            }, 
            {
                id: '3',
                title: 'The Truman Show (1998)',
                description: 'The story of King George VI, his unexpected ascension to the throne of the British Empire in 1936, and the speech therapist who helped the unsure monarch overcome his stammer.',
                url: 'https://drive.google.com/file/d/1S1HJZKYLQ8pvMoHzl3UrhYzT5SFjS-hv/view',
                thumbnail: '/site_files/Truman_Poster.jpg',
                category: 'Intermediate',
                Level: 'Intermediate',
                duration: '1:43:00'
                
            }
            
        ];
    </script>
</head>
<body class="bg-gray-50 dark:bg-gray-950 transition-colors duration-300">
    <div id="app-container" class="min-h-screen flex flex-col">
    </div>

    <script>
        // --- Global State ---
        let currentDarkMode = document.documentElement.classList.contains('dark');
        let searchQuery = '';
        const videosByCategory = {};

        // --- SVGs ---
        const ICONS = {
            bookOpen: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 24}" height="${props.height || 24}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path></svg>`,
            mobileMenu: (props) => `<svg xmlns="http://www.w3.org/2000/svg" class="${props.class || 'h-6 w-6'}" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" /></svg>`,
            heart: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 14}" height="${props.height || 14}" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>`,
            github: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 18}" height="${props.height || 18}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path></svg>`,
            twitter: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 18}" height="${props.height || 18}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path></svg>`,
            youtube: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 18}" height="${props.height || 18}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><path d="M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2A29 29 0 0 0 23 11.75a29 29 0 0 0-.46-5.33z"></path><polygon points="9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02"></polygon></svg>`,
            play: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 24}" height="${props.height || 24}" viewBox="0 0 24 24" fill="currentColor" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><polygon points="5 3 19 12 5 21 5 3"></polygon></svg>`,
            clock: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 24}" height="${props.height || 24}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline></svg>`,
            chevronRight: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 24}" height="${props.height || 24}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><polyline points="9 18 15 12 9 6"></polyline></svg>`,
            chevronDown: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 24}" height="${props.height || 24}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><polyline points="6 9 12 15 18 9"></polyline></svg>`,
            moon: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 20}" height="${props.height || 20}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path></svg>`,
            sun: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 20}" height="${props.height || 20}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line></svg>`,
            search: (props) => `<svg xmlns="http://www.w3.org/2000/svg" width="${props.width || 18}" height="${props.height || 18}" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="${props.class || ''}"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg>`,
        };

        // --- Helper Functions ---
        function groupVideosByCategory() {
            videoData.forEach(video => {
                if (!videosByCategory[video.category]) {
                    videosByCategory[video.category] = [];
                }
                videosByCategory[video.category].push(video);
            });
        }

        function filterVideos(videosToFilter) {
            if (!searchQuery.trim()) return videosToFilter;
            return videosToFilter.filter(video =>
                video.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
                video.description.toLowerCase().includes(searchQuery.toLowerCase()) ||
                video.category.toLowerCase().includes(searchQuery.toLowerCase()) ||
                video.Level.toLowerCase().includes(searchQuery.toLowerCase())
            );
        }

        // --- Rendering Functions ---
        function renderHeader() {
            const navLink = (href, text, active = false) => `
                <a
                    href="${href}"
                    class="text-sm block md:inline-block font-medium transition-colors duration-200 hover:text-indigo-600 dark:hover:text-indigo-400 ${
                        active
                            ? 'text-indigo-600 dark:text-indigo-400'
                            : 'text-gray-700 dark:text-gray-300'
                    }"
                >
                    ${text}
                </a>`;

            return `
                <header class="relative bg-white dark:bg-gray-900 shadow-md backdrop-blur-md bg-opacity-95 dark:bg-opacity-95 sticky top-0 z-10 transition-colors duration-300">
                    <div class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
                        <div class="flex justify-between items-center">
                            <div class="flex items-center">
                                ${ICONS.bookOpen({ width: 28, height: 28, class: "text-indigo-600 dark:text-indigo-400 mr-3" })}
                                <div>
                                    <h1 class="text-3xl font-bold text-indigo-600 dark:text-indigo-400 tracking-tight">
                                        Watch & Learn
                                    </h1>
                                    <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">
                                        Language Improvement and Education by an Audio-Visual Method
                                    </p>
                                </div>
                            </div>

                            <nav id="main-nav"
                                class="hidden absolute top-full left-0 right-0 bg-white dark:bg-gray-900 shadow-lg p-4 space-y-2 flex-col z-20
                                       md:flex md:relative md:top-auto md:left-auto md:right-auto md:bg-transparent dark:md:bg-transparent md:shadow-none md:p-0 md:space-y-0 md:flex-row md:space-x-8">
                                ${navLink("/index.html", "Home")}
                                ${navLink("#", "Movies", true)}
                                ${navLink("#", "Playlists")}
                                ${navLink("#", "About")}
                            </nav>

                            <button id="mobile-menu-button" class="md:hidden text-gray-700 dark:text-gray-300 focus:outline-none">
                                ${ICONS.mobileMenu({})}
                            </button>
                        </div>
                    </div>
                </header>`;
        }

        function renderFeaturedVideo(video) {
            if (!video) return '';
            // For the Movies page, display the featured video within the main content area,
            // below the search bar, not as a full-bleed hero.
            return `
                <section class="mb-12">
                    <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-6">Featured Movie</h2>
                    <div class="rounded-xl overflow-hidden shadow-lg bg-white dark:bg-gray-800 relative group">
                        <div
                            class="h-72 sm:h-96 bg-cover bg-center relative"
                            style="background-image: url('${video.thumbnail}')"
                        >
                            <div class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/50 to-transparent"></div>

                            <div class="absolute bottom-0 left-0 right-0 p-6 sm:p-8">
                                <span class="inline-block px-3 py-1 rounded-full text-xs font-medium bg-indigo-600 text-white mb-3">
                                    Featured
                                </span>

                                <h3 class="text-2xl sm:text-3xl font-bold text-white mb-2">${video.title}</h3>
                                <p class="text-gray-200 mb-4 max-w-2xl text-sm sm:text-base line-clamp-2">${video.description}</p>

                                <div class="flex flex-wrap items-center gap-4">
                                    <a
                                        href="${video.url}"
                                        target="_blank"
                                        rel="noopener noreferrer"
                                        class="inline-flex items-center px-4 py-2 rounded-full bg-indigo-600 hover:bg-indigo-700 text-white font-medium text-sm sm:text-base transition-colors duration-200"
                                    >
                                        ${ICONS.play({ width: 18, height: 18, class: "mr-2", fill: "currentColor", stroke:"currentColor"})}
                                        Check it Out!
                                    </a>

                                    <div class="inline-flex items-center text-gray-300 text-sm">
                                        ${ICONS.clock({ width: 18, height: 18, class: "mr-2" })}
                                        ${video.duration}
                                    </div>
                                </div>
                            </div>
                        </div>

                        <a href="${video.url}" target="_blank" rel="noopener noreferrer" class="absolute inset-0 opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity duration-300 cursor-pointer">
                            <div class="w-16 h-16 sm:w-20 sm:h-20 rounded-full bg-indigo-600/90 flex items-center justify-center transform transition-transform duration-300 group-hover:scale-110">
                                ${ICONS.play({ width: 28, height: 28, class: "text-white ml-1", fill: "currentColor", stroke:"currentColor"})}
                            </div>
                        </a>
                    </div>
                </section>`;
        }

        function renderVideoCard(video) {
            return `
                <div class="rounded-xl overflow-hidden shadow-md hover:shadow-xl bg-white dark:bg-gray-800 transition-all duration-300 transform hover:-translate-y-1 group">
                    <div class="relative aspect-video">
                        <img
                            src="${video.thumbnail}"
                            alt="${video.title}"
                            class="w-full h-full object-cover"
                        />
                        <a href="${video.url}" target="_blank" rel="noopener noreferrer" class="absolute inset-0 bg-black bg-opacity-20 group-hover:bg-opacity-40 transition-all duration-300 flex items-center justify-center opacity-0 group-hover:opacity-100">
                            <div class="w-12 h-12 rounded-full bg-indigo-600/90 flex items-center justify-center transform scale-90 group-hover:scale-100 transition-transform duration-300">
                                ${ICONS.play({ width: 20, height: 20, class: "text-white ml-0.5", fill: "currentColor", stroke:"currentColor"})}
                            </div>
                        </a>

                        ${video.duration ? `
                        <div class="absolute bottom-3 right-3 bg-black/70 text-white text-xs py-1 px-2 rounded flex items-center">
                            ${ICONS.clock({ width: 12, height: 12, class: "mr-1" })}
                            ${video.duration}
                        </div>` : ''}
                    </div>

                    <div class="p-4">
                        <h3 class="font-medium text-gray-900 dark:text-white mb-1 line-clamp-1">
                            ${video.title}
                        </h3>
                        <p class="text-sm text-gray-600 dark:text-gray-300 mb-3 line-clamp-2">
                            ${video.description}
                        </p>
                        <div class="flex justify-between items-center">
                            <span class="inline-block px-2.5 py-0.5 text-xs rounded-full bg-indigo-100 dark:bg-indigo-900 text-indigo-800 dark:text-indigo-200">
                                ${video.Level}
                            </span>
                            <a
                                href="${video.url}"
                                target="_blank"
                                rel="noopener noreferrer"
                                class="text-xs font-medium text-indigo-600 dark:text-indigo-400 hover:text-indigo-800 dark:hover:text-indigo-300 transition-colors"
                            >
                                Watch Now →
                            </a>
                        </div>
                    </div>
                </div>`;
        }

        function renderVideoSection(category, videos, isExpanded = true) {
            const chevronIcon = isExpanded ? ICONS.chevronDown({ width:24, height:24, class: "mr-2 text-indigo-600 dark:text-indigo-400" }) : ICONS.chevronRight({width:24, height:24, class: "mr-2 text-indigo-600 dark:text-indigo-400" });
            return `
                <section class="mb-12">
                    <div
                        class="flex items-center justify-between mb-6 cursor-pointer video-section-header"
                    >
                        <h2 class="text-2xl font-semibold text-gray-900 dark:text-white flex items-center">
                            <span class="chevron-icon">${chevronIcon}</span>
                            ${category}
                        </h2>
                        <span class="text-sm text-gray-500 dark:text-gray-400">
                            ${videos.length} movie${videos.length !== 1 ? 's' : ''}
                        </span>
                    </div>

                    <div class="video-section-content grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 ${isExpanded ? '' : 'hidden'}">
                        ${videos.length > 0 ? videos.map(video => renderVideoCard(video)).join('') : `
                        <p class="col-span-full text-gray-500 dark:text-gray-400 italic text-center py-8">
                            No movies found in this category.
                        </p>
                        `}
                    </div>
                </section>`;
        }

        function renderVideoSections() {
            const container = document.getElementById('video-sections-container');
            if (!container) return;
            let html = '';
            // Sort categories alphabetically for consistent display
            const sortedCategories = Object.keys(videosByCategory).sort();

            sortedCategories.forEach(category => {
                const videos = videosByCategory[category];
                const filtered = filterVideos(videos);
                // Render section only if it has videos after filtering or if search is empty
                if (filtered.length > 0 || !searchQuery.trim()) {
                    html += renderVideoSection(category, filtered); // Default to expanded
                }
            });

            if (searchQuery.trim() && html === '') {
                html = `<p class="col-span-full text-gray-500 dark:text-gray-400 italic text-center py-8">
                            No movies found matching your search query.
                        </p>`;
            }
            container.innerHTML = html;
            addVideoSectionEventListeners();
        }

        function renderFooter() {
            const socialLink = (icon, href, label) => `
                <a
                    href="${href}"
                    aria-label="${label}"
                    class="w-8 h-8 rounded-full bg-gray-100 dark:bg-gray-800 flex items-center justify-center text-gray-600 dark:text-gray-400 hover:bg-indigo-100 dark:hover:bg-indigo-900 hover:text-indigo-600 dark:hover:text-indigo-400 transition-colors duration-200"
                >
                    ${icon}
                </a>`;
            const footerLink = (href, text) => `
                <li>
                    <a
                        href="${href}"
                        class="text-gray-600 dark:text-gray-400 hover:text-indigo-600 dark:hover:text-indigo-400 transition-colors duration-200"
                    >
                        ${text}
                    </a>
                </li>`;

            return `
                <footer class="bg-white dark:bg-gray-900 border-t border-gray-200 dark:border-gray-800 transition-colors duration-300 mt-auto">
                    <div class="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
                        <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
                            <div class="col-span-1 md:col-span-2">
                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Watch & Learn</h3>
                                <p class="text-gray-600 dark:text-gray-400 mb-4 max-w-md">
                                    Language Improvement and Education by an Audio-Visual Method
                                </p>
                                <div class="flex space-x-4">
                                    ${socialLink(ICONS.twitter({ width: 18, height: 18 }), "#", "Twitter")}
                                    ${socialLink(ICONS.youtube({ width: 18, height: 18 }), "#", "YouTube")}
                                    ${socialLink(ICONS.github({ width: 18, height: 18 }), "#", "GitHub")}
                                </div>
                            </div>

                            <div>
                                <h3 class="text-sm font-semibold text-gray-900 dark:text-white uppercase tracking-wider mb-4">Movies</h3>
                                <ul class="space-y-3">
                                    ${footerLink("#", "The Rope")}
                                    ${footerLink("#", "The King's Speech")}
                                    ${footerLink("#", "The Truman Show")}
                                    ${footerLink("#", "Knives Out")}
                                </ul>
                            </div>

                            <div>
                                <h3 class="text-sm font-semibold text-gray-900 dark:text-white uppercase tracking-wider mb-4">Support</h3>
                                <ul class="space-y-3">
                                    ${footerLink("#", "Contact Us")}
                                    ${footerLink("#", "Privacy Policy")}
                                    ${footerLink("#", "Terms of Service")}
                                </ul>
                            </div>
                        </div>

                        <div class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-800">
                            <p class="text-sm text-center text-gray-500 dark:text-gray-400 flex items-center justify-center">
                                © ${new Date().getFullYear()} Watch & Learn. Made with
                                ${ICONS.heart({ width: 14, height: 14, class: "mx-1 text-rose-500" })}
                                for education.
                            </p>
                        </div>
                    </div>
                </footer>`;
        }

        // --- Event Handlers & Logic ---
        function toggleDarkMode() {
            currentDarkMode = !currentDarkMode;
            document.documentElement.classList.toggle('dark', currentDarkMode);
            localStorage.theme = currentDarkMode ? 'dark' : 'light';

            const toggleButton = document.getElementById('theme-toggle-button');
            if(toggleButton) {
                toggleButton.innerHTML = currentDarkMode ? ICONS.sun({ width: 20, height: 20 }) : ICONS.moon({ width: 20, height: 20 });
                toggleButton.setAttribute('aria-label', currentDarkMode ? "Switch to light mode" : "Switch to dark mode");
            }
        }

        function handleSearch(event) {
            searchQuery = event.target.value;
            renderVideoSections();
        }

        function toggleVideoSection(event) {
            const header = event.currentTarget;
            const content = header.nextElementSibling;
            const iconContainer = header.querySelector('.chevron-icon');

            const isExpanding = content.classList.contains('hidden');
            content.classList.toggle('hidden');

            if (isExpanding) {
                iconContainer.innerHTML = ICONS.chevronDown({width:24, height:24, class: "mr-2 text-indigo-600 dark:text-indigo-400"});
            } else {
                iconContainer.innerHTML = ICONS.chevronRight({width:24, height:24, class: "mr-2 text-indigo-600 dark:text-indigo-400"});
            }
        }

        function addVideoSectionEventListeners() {
            document.querySelectorAll('.video-section-header').forEach(header => {
                header.removeEventListener('click', toggleVideoSection); // Prevent duplicate listeners
                header.addEventListener('click', toggleVideoSection);
            });
        }

        // --- Initialization ---
        function initializeApp() {
            groupVideosByCategory();

            const appContainer = document.getElementById('app-container');
            appContainer.innerHTML = `
                ${renderHeader()}
                <main class="flex-grow container mx-auto px-4 sm:px-6 lg:px-8 py-8">
                    <div class="flex flex-col sm:flex-row justify-between items-center mb-8">
                        <div class="relative w-full sm:w-64 mb-4 sm:mb-0">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                ${ICONS.search({ class: "text-gray-400", width: 18, height: 18 })}
                            </div>
                            <input
                                type="text"
                                id="search-input"
                                placeholder="Search movies..."
                                class="w-full pl-10 pr-4 py-2 border border-gray-200 dark:border-gray-700 rounded-full bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200 focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-400 transition-all"
                            />
                        </div>
                    </div>
                    <div id="featured-video-container">
                        ${renderFeaturedVideo(videoData.find(v => v.featured) || videoData[0])}
                    </div>
                    <div id="video-sections-container">
                    </div>
                </main>
                ${renderFooter()}
            `;

            renderVideoSections(); // Initial render of video sections

            // Add event listeners
            document.getElementById('search-input').addEventListener('input', handleSearch);
            document.getElementById('theme-toggle-button').addEventListener('click', toggleDarkMode);

            const mobileMenuButton = document.getElementById('mobile-menu-button');
            if (mobileMenuButton) {
                mobileMenuButton.addEventListener('click', () => {
                    const mainNav = document.getElementById('main-nav');
                    if (mainNav) {
                        mainNav.classList.toggle('hidden');
                    }
                });
            }
        }

        document.addEventListener('DOMContentLoaded', initializeApp);
    </script>
</body>
</html>